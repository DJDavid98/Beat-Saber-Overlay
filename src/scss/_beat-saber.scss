$additional-data-label-font-size: calc(var(--beat-saber-base-font-size) * 2.5);
$data-skew-amount: -10deg;

@mixin float-in-idle($skew: false) {
  opacity: 0;
  transition-duration: 2s;
  transition-timing-function: cubic-bezier(0.68, -0.6, 0.32, 1.6);
  transition-property: transform, opacity;
  will-change: transform;
  transform: translate(100%);
}

@mixin float-in-shown($skew: false) {
  transform: translate(0%);
  opacity: 1;
}

.song-name, .song-author, .song-details, #connection {
  line-height: 1em;
}

#beat-saber {
  cursor: pointer;
  $horizontal-spacing: $edge-spacing * 1.5;
  color: $text-color;
  font-size: calc(var(--beat-saber-base-font-size) * 3.5);
  text-align: right;
  position: absolute;
  top: $edge-spacing;
  right: $horizontal-spacing;
  z-index: map-get($z-index-map, 'beat-saber');
  max-width: calc(100% - #{2 * $horizontal-spacing});
  @include special-font;
}

.data-layout {
  width: 100%;
  display: flex;
  justify-content: flex-end;
  align-items: center;
  flex-flow: row nowrap;
  margin-bottom: calc(var(--beat-saber-base-font-size) * 1);
  @include float-in-idle;

  &.connected > * {
    font-style: normal;
    transform: skew($data-skew-amount);
  }

  .song-name, .song-author, .song-details, #connection {
    @include float-in-idle;
  }

  &.show {
    @include float-in-shown;

    .song-name, .song-author, .song-details, #connection {
      @include float-in-shown;
    }
  }

  .song-info-block {
    padding-right: $image-spacing * .6;
  }
}

.song-info-block {
  min-width: 0;
  flex: 0 0 calc(100% - $cover-size);
  display: flex;
  align-items: stretch;
  justify-content: space-around;
  flex-flow: column nowrap;

  .song-info-line {
    white-space: nowrap;
    width: 100%;
    box-sizing: border-box;
    position: relative;
    $cutoff-protection: 0.2em;

    &, * {
      overflow: hidden;
    }

    > * {
      transform: skew(-5deg);
    }

    &, > * {
      padding-top: $cutoff-protection;
      padding-bottom: $cutoff-protection;
      margin-top: -$cutoff-protection;
      margin-bottom: -$cutoff-protection;
    }

    .song-info-line-original.hide {
      visibility: hidden;
    }

    .song-info-line-marquee {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;

      &.hide {
        visibility: hidden;
      }

      .song-info-line-marquee-item {
        margin-right: 1em;
      }
    }
  }
}

.song-cover-image {
  flex: 0 0 $cover-size;
  display: block;
  width: $cover-size;
  height: $cover-size;
  border-radius: $cover-size * 0.1;
  background: #000;
}

.song-name {
  transition-delay: $transition-delay * 1;

  .sub-name {
    font-size: .8em;
    margin-left: .35em;
  }
}

.song-author {
  transition-delay: $transition-delay * 2;
  color: rgba($text-color, .75);
  font-size: .7em;

  .mapper {
    color: $mapper-text-color;
  }
}

.song-details {
  transition-delay: $transition-delay * 3;
  font-size: .5em;

  &:empty {
    display: none;
  }

  .song-detail-items {
    @include dots-between-children;
  }
}

#beat-saber-additional-data-root {
  transition-delay: $transition-delay * 4;
  display: flex;
  flex-flow: row nowrap;
  justify-content: flex-end;

  @include float-in-idle;

  &.show {
    @include float-in-shown;
  }

  > div {
    display: flex;
    flex-flow: column nowrap;
    align-items: flex-end;

    &:not(:last-child) {
      margin-right: calc(var(--beat-saber-base-font-size) * 2);
    }
  }

  // Minimum widths are used to prevent the UI from
  // jumping around too much as numbers change rapidly
  .accuracy-graph-label {
    > * {
      white-space: nowrap;
    }

    > :not(:last-child) {
      margin-right: calc(var(--beat-saber-base-font-size) * .75);
    }

    .fixed-width {
      display: inline-block;
      text-align: center;
    }

    .accuracy-percent {
      min-width: calc(var(--beat-saber-base-font-size) * 6.5);
    }

    .accuracy-rating {
      min-width: calc(var(--beat-saber-base-font-size) * 4.1);
    }

    .energy-amount {
      min-width: calc(var(--beat-saber-base-font-size) * 2.5);
    }

    .energy svg {
      margin-left: calc(var(--beat-saber-base-font-size) * .5);
      height: .7em;
      display: inline-block;
    }
  }

  .accuracy-graph-label {
    font-size: $additional-data-label-font-size;
  }
}

.accuracy-graph-wrapper {
  display: block;
  transform: skew(-8deg);
  border-radius: calc(var(--beat-saber-base-font-size) * .25);
  background-image: linear-gradient(to bottom, rgba(white, .3) 0%, rgba(white, .1) 100%);
  position: relative;

  .graph-legend-wrapper {
    position: absolute;

    .graph-legend {
      font-size: calc(var(--beat-saber-base-font-size) * 1.5);
      line-height: 1em;
      color: #ccc;
    }
  }

  .accuracy-graph-range {
    top: 0;
    left: calc(-1 * var(--beat-saber-base-font-size) * 6);
    bottom: 0;
    right: 100%;
    height: 100%;
    padding-right: calc(var(--beat-saber-base-font-size) * .5);
    text-align: right;
    display: flex;
    flex-flow: column nowrap;
    align-items: flex-end;
    justify-content: space-between;

    .graph-legend {
      &.top {
        position: relative;
        transform: translateY(-40%);
      }

      &.bottom {
        position: relative;
        transform: translateY(40%);
      }
    }
  }

  .accuracy-graph-duration {
    top: 100%;
    left: 0;
    bottom: calc(-1 * var(--beat-saber-base-font-size) * 2);
    right: 0;
    width: 100%;
    padding-top: calc(var(--beat-saber-base-font-size) * .5);
    display: flex;
    flex-flow: row nowrap;
    align-items: center;
    justify-content: space-between;

    .graph-legend {
      display: block;
      width: 0;

      span {
        transform: translateX(-50%);
        display: inline-block;
      }
    }
  }

  canvas {
    display: block;
    border-radius: inherit;
  }
}

#beat-saber-modifiers-root {
  .modifiers-label {
    font-size: $additional-data-label-font-size;
  }

  .modifiers-list {
    margin: 0;
    padding: 0;
    list-style: none;
    font-size: calc(var(--beat-saber-base-font-size) * 2);
    line-height: 1em;
  }
}

#beat-saber-note-pile-root {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: map-get($z-index-map, 'notes-pile');
  overflow: hidden;
  pointer-events: none;

  canvas {
    width: 100%;
    height: 100%;
  }
}
